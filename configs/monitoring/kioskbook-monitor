#!/bin/bash
# KioskBook monitoring and recovery script

LOG_FILE="/var/log/kioskbook/monitor.log"
MAX_MEMORY_MB=2048
MAX_LOAD=5.0
DISPLAY_CONFIG="/etc/kioskbook/display.conf"

log_monitor() {
    echo "$(date): $1" >> "$LOG_FILE"
}

# Check memory usage
check_memory() {
    local memory_mb=$(free -m | awk '/^Mem:/ {print $3}')
    if [[ $memory_mb -gt $MAX_MEMORY_MB ]]; then
        log_monitor "HIGH MEMORY: ${memory_mb}MB > ${MAX_MEMORY_MB}MB"
        return 1
    fi
    return 0
}

# Check system load
check_load() {
    local load=$(cat /proc/loadavg | awk '{print $1}')
    if (( $(awk "BEGIN {print ($load > $MAX_LOAD)}") )); then
        log_monitor "HIGH LOAD: $load > $MAX_LOAD"
        return 1
    fi
    return 0
}

# Check if Chromium is running
check_chromium() {
    if ! pgrep -f "chromium.*kiosk" >/dev/null; then
        log_monitor "RECOVERY: Chromium not running, restarting display"
        systemctl restart lightdm
        return 1
    fi
    return 0
}

# Check if display URL is accessible (network connectivity and service worker)
check_application() {
    # Load display configuration
    if [[ -f "$DISPLAY_CONFIG" ]]; then
        source "$DISPLAY_CONFIG"
    else
        log_monitor "WARNING: Display config not found at $DISPLAY_CONFIG"
        return 0  # Don't fail if config doesn't exist yet
    fi

    # Build URL with token
    local check_url="${DISPLAY_URL}?token=${DISPLAY_TOKEN}"

    # Check if URL is accessible
    if ! curl -s --max-time 10 "$check_url" >/dev/null; then
        log_monitor "WARNING: Display URL not accessible: $DISPLAY_URL"
        # Don't restart anything - this is an external service
        # Just log the issue for monitoring
        return 1
    fi
    return 0
}

# Main monitoring loop
main() {
    mkdir -p "$(dirname "$LOG_FILE")"

    local all_healthy=true

    check_memory || all_healthy=false
    check_load || all_healthy=false
    check_chromium || all_healthy=false
    check_application || all_healthy=false

    # Log success if all checks pass
    if [[ "$all_healthy" == true ]]; then
        log_monitor "All systems healthy"
    fi
}

main "$@"
