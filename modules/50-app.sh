#!/bin/bash
#
# Module: 50-app.sh
# Description: Configure kiosk display URL
#

set -euo pipefail

# Get script directory for accessing configs
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source "$SCRIPT_DIR/lib/common.sh"

module_name="Application"
CONFIG_DIR="/etc/kioskbook"
CONFIG_FILE="$CONFIG_DIR/display.conf"

log_module "$module_name" "Configuring display URL..."

# Ensure config directory exists
mkdir -p "$CONFIG_DIR"

# Use provided display URL and token, or keep existing configuration
if [[ -n "${DISPLAY_URL:-}" ]] && [[ -n "${DISPLAY_TOKEN:-}" ]]; then
    log_module "$module_name" "Setting display URL: $DISPLAY_URL"

    # Save configuration
    cat > "$CONFIG_FILE" <<EOF
# KioskBook Display Configuration
# This file is automatically generated during installation
DISPLAY_URL="$DISPLAY_URL"
DISPLAY_TOKEN="$DISPLAY_TOKEN"
EOF

    chmod 644 "$CONFIG_FILE"
    log_module_success "$module_name" "Display URL configured"
elif [[ -f "$CONFIG_FILE" ]]; then
    log_module "$module_name" "Display configuration already exists, keeping current settings"
else
    log_module "$module_name" "No display URL provided and no existing configuration found"
    log_module "$module_name" "Creating placeholder configuration - update /etc/kioskbook/display.conf"

    cat > "$CONFIG_FILE" <<EOF
# KioskBook Display Configuration
# Update these values for your deployment
DISPLAY_URL="https://kioskbook.ca/display"
DISPLAY_TOKEN="YOUR_TOKEN_HERE"
EOF

    chmod 644 "$CONFIG_FILE"
fi

log_module_success "$module_name" "Display configuration ready"
